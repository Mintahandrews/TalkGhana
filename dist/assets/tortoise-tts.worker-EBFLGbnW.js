(function(){"use strict";let u=!1,g=!1;const i={"english-default":{loaded:!0},"twi-default":{loaded:!1},"ga-default":{loaded:!1},"ewe-default":{loaded:!1},"hausa-default":{loaded:!1}};async function h(e,t){var a;const o=`${e}-${t}`;(a=i[o])!=null&&a.loaded||(await new Promise(n=>setTimeout(n,300)),i[o]?i[o].loaded=!0:i[o]={loaded:!0})}self.onmessage=async e=>{const{id:t,type:o,data:a}=e.data;try{switch(o){case"initialize":await w(t);break;case"generate":await p(t,a);break;case"loadVoice":await y(t,a);break;case"cloneVoice":await k(t,a);break;case"stop":await m(t);break;default:s(t,`Unknown message type: ${o}`)}}catch(n){s(t,n.message||"Unknown error")}};async function w(e){if(u){c(e,"initialize",{success:!0});return}try{console.log("TortoiseTTS worker: Initializing..."),await new Promise(t=>setTimeout(t,500)),u=!0,c(e,"initialize",{success:!0})}catch(t){console.error("TortoiseTTS worker: Failed to initialize",t),s(e,`Failed to initialize: ${t.message}`)}}async function p(e,t){if(!u){s(e,"Worker not initialized");return}if(g){s(e,"Worker is busy");return}try{g=!0;const{text:o,voiceKey:a,config:n}=t;console.log(`TortoiseTTS worker: Generating speech for "${o}" using ${a}`),(!i[a]||!i[a].loaded)&&await h(a.split("-")[0],a.split("-")[1]);const r=$(o,n);c(e,"generate",r)}catch(o){console.error("TortoiseTTS worker: Failed to generate speech",o),s(e,`Failed to generate speech: ${o.message}`)}finally{g=!1}}async function y(e,t){const{language:o,voiceId:a}=t,n=`${o}-${a}`;try{console.log(`TortoiseTTS worker: Loading voice ${n}`),await h(o,a),c(e,"loadVoice",{success:!0,voiceKey:n})}catch(r){console.error(`TortoiseTTS worker: Failed to load voice ${n}`,r),s(e,`Failed to load voice ${n}: ${r.message}`)}}async function k(e,t){if(!u){s(e,"Worker not initialized");return}try{const{audioClips:o,language:a}=t;console.log(`TortoiseTTS worker: Cloning voice for ${a} from ${o.length} clips`);const n=`cloned-${a}-${Date.now()}`;i[`${a}-${n}`]={loaded:!0},c(e,"cloneVoice",{success:!0,voiceId:n,language:a})}catch(o){console.error("TortoiseTTS worker: Failed to clone voice",o),s(e,`Failed to clone voice: ${o.message}`)}}async function m(e){console.log("TortoiseTTS worker: Stopping..."),c(e,"stop",{success:!0})}function $(e,t){const a=Math.min(10,Math.max(1,e.length*.1)),n=Math.floor(22050*a),r=new ArrayBuffer(n*2),M=new Int16Array(r),T=220+e.length%10*50;for(let d=0;d<n;d++){const l=d/22050;let f=Math.sin(2*Math.PI*T*l);f+=.5*Math.sin(2*Math.PI*T*2*l),f+=.25*Math.sin(2*Math.PI*T*3*l);const v=Math.min(1,10*l)*Math.min(1,10*(a-l));f*=v,M[d]=Math.floor(f*1e4)}return r}function c(e,t,o){const a={id:e,type:t,data:o};self.postMessage(a)}function s(e,t){const o={id:e,type:"error",error:t};self.postMessage(o)}console.log("TortoiseTTS worker initialized")})();
//# sourceMappingURL=tortoise-tts.worker-EBFLGbnW.js.map
